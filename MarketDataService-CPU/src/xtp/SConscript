import os
Import('*')

lib = "xtp"
# these modules will compiled in to library
lib_modules = """
              XTPHeader.cpp
              XTPReader.cpp
              Param.cpp
              Package.cpp
              XtpXmlReader.cpp
              TID.cpp
              TIDSpec.cpp
              GlobalVar.cpp
              XTPPackage.cpp
              MBLData.cpp
              orderDeal.cpp
              orderBookOutput.cpp
              topicMarket.cpp
              genMarket.cpp
              Endian.cpp
              """.split()

bin_list = [("xtpv", "main_xtpv.cpp"),
            ("gendata", "main_gendata.cpp"),
            ("send", "main_send.cpp"),

           ]

extra_include_dir = [
    "#" + dirs["util"],
]

additional_libs = ["util"]
############################### for library ###########################
#######################################################################
# clone the environment from global env and make some modification of it
myenv    = env.Clone(CPPPATH = extra_include_dir)
myenv.Append(LIBS = additional_libs)

# compile to object files
lib_objs = myenv.StaticObject(lib_modules)

# compile library
lib_ar   = myenv.StaticLibrary(target = lib, source = lib_objs)

# install
myenv.Install("#" + dirs['lib'], lib_ar)

for bin in bin_list:
  bin_obj = myenv.StaticObject(bin[1])
  bin_target = myenv.Program(target = bin[0], source = bin_obj + lib_objs)
  myenv.Install("#" + dirs['bin'], bin_target)
